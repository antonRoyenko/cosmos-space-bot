generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  wallets        Wallet[]
  telegramId     BigInt       @unique @map("telegram_id")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  createdAt      DateTime     @default(now()) @map("created_at")
  notification    Notification  @relation(fields: [notificationId], references: [id])
  notificationId  Int
  networkId      Int?
  Network        Network?     @relation(fields: [networkId], references: [id])
  @@map(name: "users")
}

model Notification {
  id                       Int       @id @default(autoincrement())
  reminderNetworksIds      Network[]
  isReminderActive         Boolean   @default(false)
  User                     User[]
  notificationReminderTime  String[]
  timezone                 String?

  @@map(name: "notifications")
}

model Wallet {
  id        Int     @id @default(autoincrement())
  wallet    String
  network   Network @relation(fields: [networkId], references: [id])
  networkId Int
  User      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique

  @@map(name: "wallets")
}

model Network {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  fullName     String
  resource     Resource?      @relation(fields: [resourceId], references: [id])
  resourceId   Int            @unique
  user         User[]
  publicUrl    String
  wsPublicUrl  String
  wallet       Wallet[]
  Notification  Notification[]

  @@map(name: "networks")
}

model Resource {
  id      Int       @id @default(autoincrement())
  site    String
  discord String
  twitter String
  youtube String?
  blog    String?
  github  String
  reddit  String?
  network Network[]

  @@map(name: "resources")
}
